{"version":3,"file":"bundle.js","mappings":";;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,0BAA0B;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC","sources":["webpack://game/./src/script.js"],"sourcesContent":["class Level {\n    constructor(parent) {\n        this.parent = parent\n\n        // eslint-disable-next-line no-undef\n        this.element = templateEngine(Level.complexityTemplate())\n        parent.appendChild(this.element)\n        this.level = [0]\n\n        this.startButton = this.element.querySelector(\n            '.complexity__start-button'\n        )\n\n        this.complexityСontainer = this.element.querySelector(\n            '.complexity__container'\n        )\n\n        this.onGenerateCardSet.bind(this)\n        this.onStartPlay.bind(this)\n        this.startButton.addEventListener('click', this.onStartPlay.bind(this))\n        this.complexityСontainer.addEventListener(\n            'click',\n            this.onComplexityClick.bind(this)\n        )\n    }\n\n    onComplexityClick(event) {\n        const target = event.target\n        if (\n            target.classList.contains('level-1') ||\n            target.classList.contains('level-2') ||\n            target.classList.contains('level-3')\n        ) {\n            target.classList.add('complexity__container_item-hover')\n        }\n\n        if (target.classList.contains('level-1')) {\n            target.parentElement.nextSibling.firstChild.classList.remove(\n                'complexity__container_item-hover'\n            )\n            this.complexityСontainer.lastChild.classList.remove(\n                'complexity__container_item-hover'\n            )\n            this.level.splice(0, 1, 3)\n        } else if (target.classList.contains('level-2')) {\n            target.parentElement.previousSibling.firstChild.classList.remove(\n                'complexity__container_item-hover'\n            )\n            target.parentElement.nextSibling.firstChild.classList.remove(\n                'complexity__container_item-hover'\n            )\n            this.level.splice(0, 1, 6)\n        } else if (target.classList.contains('level-3')) {\n            target.parentElement.previousSibling.firstChild.classList.remove(\n                'complexity__container_item-hover'\n            )\n            this.complexityСontainer.firstChild.classList.remove(\n                'complexity__container_item-hover'\n            )\n            this.level.splice(0, 1, 9)\n        }\n    }\n\n    onStartPlay() {\n        if (this.level[0] === 0) {\n            return\n        }\n        this.element.remove()\n        this.onGenerateCardSet(this.level[0])\n    }\n\n    onGenerateCardSet(lvl) {\n        const cardSet = []\n\n        for (let i = 0; lvl * 2 > cardSet.length; i++) {\n            const cardId = Math.floor(Math.random() * (37 - 1)) + 1\n\n            if (cardSet.length > 0) {\n                const callback = (generatedNumber) => {\n                    return generatedNumber === cardId\n                }\n                if (cardSet.find(callback) === undefined) {\n                    cardSet.push(cardId, cardId)\n                }\n            } else {\n                cardSet.push(cardId, cardId)\n            }\n        }\n        // eslint-disable-next-line no-undef\n        new Game(\n            this.parent,\n            cardSet.sort(() => 0.5 - Math.random())\n        )\n    }\n}\n\nLevel.complexityTemplate = () => ({\n    tag: 'section',\n    cls: 'complexity',\n    content: [\n        {\n            tag: 'div',\n            cls: 'complexity__title',\n            content: 'Выбери сложность',\n        },\n        {\n            tag: 'div',\n            cls: 'complexity__container',\n            content: [\n                {\n                    tag: 'div',\n                    cls: ['complexity__container_item-shell', 'level-1'],\n                    content: {\n                        tag: 'div',\n                        cls: ['complexity__container_item', 'level-1'],\n                        content: '1',\n                    },\n                },\n\n                {\n                    tag: 'div',\n                    cls: ['complexity__container_item-shell', 'level-2'],\n                    content: {\n                        tag: 'div',\n                        cls: ['complexity__container_item', 'level-2'],\n                        content: '2',\n                    },\n                },\n                {\n                    tag: 'div',\n                    cls: ['complexity__container_item-shell', 'level-3'],\n                    content: {\n                        tag: 'div',\n                        cls: ['complexity__container_item', 'level-3'],\n                        content: '3',\n                    },\n                },\n            ],\n        },\n        {\n            tag: 'button',\n            cls: 'complexity__start-button',\n            content: 'Старт',\n        },\n    ],\n})\n"],"names":[],"sourceRoot":""}